package template

import lib "github.com/zokypesch/protoc-gen-react/lib"

var tmplService = `
// Code generated by sangkuriang protoc-gen-go. DO NOT EDIT.
// source: {{ .FileName }}_{{ .GoPackage }}
// File Location: api/{{ ucfirst (getFirstService .Services).Name }}.ts

import AxiosHttpClient, { requestConfig } from '@prakerja/core-fe/build/core/axios.http.client'

{{- range $service := .Services }}
{{- range $method := $service.Methods }}
{{- if eq $method.HttpMode "get"}}
{{- if eq $method.Input "empty"}}
{{- else}}
import { BuildGetString } from '@prakerja/core-fe/build/core/utils.format'
{{- end}}
{{- end}}
import { {{- if eq $method.HttpMode "get"}}
{{- if eq $method.Input "empty"}}
{{- else}}
	{{ $method.MessageRequest.Name }},
	{{- end }}
	{{- else}}
	{{ $method.MessageRequest.Name }},
	{{- end }}
	{{ $method.MessageResponse.Name }},
} from './{{ $method.Name }}.types'
{{- end }}
{{- end }}

const baseURL = process.env.REACT_APP_API_URL;

{{- range $service := .Services }}
{{- range $method := $service.Methods }}

export const {{ $method.Name }} = (
	{{- if eq $method.HttpMode "get"}}
	{{- if eq $method.Input "empty"}}
	{{- else}}
	params: {{ ucfirst $method.Input }},
	{{- end}}
	{{- else}}
	params: {{ ucfirst $method.Input }},
	{{- end}}
	requestConfig: requestConfig,
) => {
	{{- if eq $method.HttpMode "get"}}
	{{- if eq $method.Input "empty"}}
	return AxiosHttpClient.{{ $method.HttpMode }}{{ unescape "<" }}undefined, {{ $method.MessageResponse.Name }}>(
		` + "`${baseURL}{{ $method.URLPath }}`" + `,
		undefined,
		requestConfig
	);
	{{- else}}
	let buildString = BuildGetString(params)
	return AxiosHttpClient.{{ $method.HttpMode }}{{ unescape "<" }}undefined, {{ $method.MessageResponse.Name }}>(
		` + "`${baseURL}{{ $method.URLPath }}${buildString}`" + `,
		undefined,
		requestConfig
	);
	{{- end }}
	{{- else}}
	return AxiosHttpClient.{{ $method.HttpMode }}{{ unescape "<" }}{{ $method.MessageRequest.Name }}, {{ $method.MessageResponse.Name }}>(
		` + "`${baseURL}{{ $method.URLPath }}`" + `,
		params,
		requestConfig
	);
	{{- end }}
	
}

{{- end }}
{{- end }}
`

var Service = lib.List{
	Name:     "GenerateService",
	FileType: ".service.ts",
	Template: tmplService,
	Location: "./%s/%s/",
	Lang:     "ts",
}
